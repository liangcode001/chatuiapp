{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useMessages","messages","appendMsg","setTyping","navbar","title","renderMessageContent","msg","content","text","onSend","type","val","trim","position","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAAe,I,0CC8CAA,MArCf,WACE,MAA2CC,sBAAY,IAA/CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,UA0B7B,OACE,cAAC,IAAD,CACEC,OAAQ,CAAEC,MAAO,4BACjBJ,SAAUA,EACVK,qBATJ,SAA8BC,GAC5B,IAAQC,EAAYD,EAAZC,QACR,OAAO,cAAC,SAAD,CAAQA,QAASA,EAAQC,QAQ9BC,OA7BJ,SAAoBC,EAAMC,GACX,SAATD,GAAmBC,EAAIC,SACzBX,EAAU,CACRS,KAAM,OACNH,QAAS,CAAEC,KAAMG,GACjBE,SAAU,UAGZX,GAAU,GAEVY,YAAW,WACTb,EAAU,CACRS,KAAM,OACNH,QAAS,CAAEC,KAAM,iBAElB,UCfMO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b6a4d539.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport '@chatui/core/es/styles/index.less';\n// 引入组件\nimport Chat, { Bubble, useMessages } from '@chatui/core';\n// 引入样式\nimport '@chatui/core/dist/index.css';\n\nfunction App() {\n  const { messages, appendMsg, setTyping } = useMessages([]);\n\n  function handleSend(type, val) {\n    if (type === 'text' && val.trim()) {\n      appendMsg({\n        type: 'text',\n        content: { text: val },\n        position: 'right',\n      });\n\n      setTyping(true);\n\n      setTimeout(() => {\n        appendMsg({\n          type: 'text',\n          content: { text: 'Bala bala' },\n        });\n      }, 1000);\n    }\n  }\n\n  function renderMessageContent(msg) {\n    const { content } = msg;\n    return <Bubble content={content.text} />;\n  }\n\n  return (\n    <Chat\n      navbar={{ title: '智能助理' }}\n      messages={messages}\n      renderMessageContent={renderMessageContent}\n      onSend={handleSend}\n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}